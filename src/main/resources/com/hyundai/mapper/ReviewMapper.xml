<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	리뷰 로직과 관련된 주문 상품(order_list) 테이블 관련 작업을 하는 Mapper
	@author 왕종휘
 -->
<mapper namespace="com.hyundai.mapper.ReviewMapper">

<!-- 
	유저의 리뷰를 가져옴
	@param 유저아이디(userId), 페이징 관련 객체(cri)
		isWritten : 작성된 리뷰, 작성 가능한 리뷰 구분 flag
 -->
	<select id="getReviewByUserId" resultType="com.hyundai.vo.ReviewDTO">
		<![CDATA[
		select userId, userName, productId, productName, productThumb,
			brandId, brandName, optionId, optionName, orderId, orderDate,
			reviewDate, reviewScore, reviewContent, reviewImg
		from (
			select 
				rownum rn,
			    u.user_id userId,
			    u.user_name userName,
			    p.product_id productId,
			    p.product_name productName,
			    p.product_thumb productThumb,
			    b.brand_id brandId,
	    		b.brand_name brandName,
			    po.option_id optionId,
			    po.option_name optionName,
			    o.order_id orderId,
			    o.order_date orderDate,
			    ol.review_date reviewDate,
			    ol.review_score reviewScore,
			    ol.review_content reviewContent,
			    ol.review_img reviewImg
			from order_list ol
			inner join users  u on (ol.user_id = #{userId} and ol.user_id = u.user_id)
			inner join orders o on (ol.order_id = o.order_id)
			inner join options po on (po.option_id = ol.option_id)
			inner join product p on (p.product_id = po.product_id)
			inner join brand b on (p.brand_id = b.brand_id)
			]]>
			<if test='isWritten == true'>
				where ol.review_date is not null
			</if>
			<if test='isWritten == false'>
				where ol.review_date is null
			</if>
			<![CDATA[
				
				order by order_date desc
			)
			 OFFSET (#{cri.pageNum}-1)*#{cri.amount} ROWS FETCH NEXT #{cri.amount} rows only
		]]>
	</select>
	
<!-- 
	리뷰의 총 개수를 가져옴
	@param 유저아이디(userId), isWritten
 -->
	<select id="getTotalCount" resultType="int">
		select 
		    count(*)
		from order_list ol
			inner join users  u on (ol.user_id = #{userId} and ol.user_id = u.user_id)
			inner join orders o on (ol.order_id = o.order_id)
		<if test='isWritten == true'>
			where ol.review_date is not null
		</if>
		<if test='isWritten == false'>
			where ol.review_date is null
		</if>
	</select>

<!-- 
	리뷰 정보를 입력
	@param 주문아이디(orderId), 상품아이디(productId), 상품옵션아이디(optionId), 리뷰점수(reviewScore), 
			리뷰내용(reviewContent), 리뷰사진(reviewImg)
 -->
	<update id="insertReview">
		update order_list
		set
			review_date = sysdate,
			review_score = #{reviewScore},
			review_content = #{reviewContent},
			review_img = #{reviewImg}
		where 
			product_id = #{productId} 
			and order_id = #{orderId}
			and option_id = #{optionId}
	</update>
	
	
	
</mapper>